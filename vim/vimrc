source ~/dotfiles/vim/plugs.vim

inoremap jk <Esc>

set background=dark
silent! colorscheme solarized

" Uncomment line below to autostrip trailing whitespace on buffer write 
autocmd FileType c,cpp,java,make,perl autocmd BufWritePre <buffer> :%s/\s\+$//e

" Automatically open quickfix window after any grep
autocmd QuickFixCmdPost *grep* cwindow

" Don't swamp buffer list with fugitive buffers
autocmd BufReadPost fugitive://* set bufhidden=delete

set hidden
set cursorline
set number
set nobackup
set noswapfile
set showtabline=1
set foldlevelstart=99

" Workaround for disabling logipat. Avoid :E shadowing
let g:loaded_logipat = 1

" Map leader
let mapleader = "\<Space>"

" Shortcut to rapidly toggle `set list`
nnoremap <leader>l :set list!<CR>

function! RegenerateTags()
  for file in tagfiles()
    let dir = fnamemodify(file, ":p:h")
    execute 'cd' dir
    !ctags -R --c-kinds=+p --extra=+f
    cd -
  endfor
endfunction

" Regenerate tag files
" nnoremap <leader>r :call RegenerateTags()<CR>

function! SetPathAndTags()
  if &filetype ==# 'netrw'
    let currdir = b:netrw_curdir
  else
    let currdir = expand('%:p:h')
  endif
  execute 'cd' currdir
  !ctags -R --c-kinds=+p --extra=+f
  cd -
  let &path=&path.",".currdir."/**"
  let &tags=&tags.",".currdir."/tags"
endfunction

" Add current files directory to path and tags
" nnoremap <leader>t :call SetPathAndTags()<CR>

function! GetSearchPath()
  let l:output = system("git rev-parse --show-toplevel")
  if v:shell_error == 0
    let l:output = substitute(l:output, "\\n", "", "")
  else
    let l:output = expand("%:p:h")
  endif
  return l:output
endfunction

" Ag mappings
nnoremap <leader>a :Ag! --ignore tags <C-R>=expand("<cword>")<CR> <C-R>=GetSearchPath()<CR>

" Ggrep mapping
nnoremap <leader>g :Ggrep <C-R>=expand("<cword>")<CR>

" Toggle Gundo
nnoremap <leader>u :GundoToggle<CR>

" Pick mappings
nnoremap <Leader>] :call PickTag()<CR>

" FZF mappings
nnoremap <Leader><Leader> :Tags<CR>
nnoremap <Leader>b :Buffers<CR>
nnoremap <Leader>f :Files<CR>


" Load project specific vim configuration (vim must start from .vim.custom folder)
if filereadable(".vim.custom")
  so .vim.custom
endif

